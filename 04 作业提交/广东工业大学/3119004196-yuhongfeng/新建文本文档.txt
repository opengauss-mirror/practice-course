#include <stdio.h>
#include <stdlib.h>

void program_one() {
	int sum;//定义求和数
	sum = 0;//初始化求和数
	for (int i = 1; i <= 100; i++) {
		//定义局部变量加数i，初始化i为1
		if (i % 2 == 0) {
			//判断i是否为偶数
			sum = sum - i;//i为偶数，则求和数减去加数
		}
		else {
			sum += i;//i为奇数，则求和数加上加数
		}
	}
	//i>100，跳出循环,输出sum
	printf("整数求和值为%d\n", sum);
}

void program_two() {
	int sum=0;//定义求和数
	for (int i = 1; i <= 200; i++) {
		//定义局部变量加数i，初始化i为1
		if ( (i % 3 == 0)&& (i % 5 != 0)) {
			//能被3整除但不能被5整除
			sum = sum + i;
		}
		else
			sum = sum;
	}
	//i>200，跳出循环,输出sum
	printf("求和值为%d\n", sum);
}

void program_three() {
	//VS中int\long\long long都是占4字节
	//所以要用double,double占8字节
	double sum = 0;//定义求和数并初始化
	for (double i = 1; i <= 20; i++) {
		//定义局部变量，i>20跳出循环
		double temp=1;//定义临时存放值
		double j = i;//定义局部变量j计算从1到20阶乘
		for (; j > 0; j--) {
			temp = temp * j;
		}
		sum += temp;
		//相应的输出要改成%.0f，精确度为小数点后0位
		printf("1的阶乘到%.0f的阶乘之和%.0f\n", i, sum);
	}
}

void program_four() {
	double sum = 0;//定义求和数并初始化
	int N,i,j,k;//定义变量
	printf("请输入N\n");
	scanf("%d", &N);
	for (i = 1; i <= N; i++) {
		double temp = 0;//定义局部变量，临时存储值
		j =k= i;//每次循环完，重新赋值，j为乘10次数，k为变量代替i改变位数
		for (; j > 0;j--) {
			temp = temp +k;
			k = k * 10;
		}
		sum += temp;
		
	}
	printf("求和值为%.0f\n", sum);

}

void program_five() {
	int i, j, n,Line;
	printf("请输入图形总层数(层数为奇数)\n");
	scanf("%d", &n);//输入正确的层数
	while (n % 2 == 0) {
		printf("请输入正确的图形总层数(层数为奇数,0为退出程序)\n");
		//重新输入正确的层数
		scanf("%d", &n);
		if (n == 0) {
			//防止陷入死循环，跳出程序条件
			exit(0);
		}
	}

	Line = (n + 1) / 2;


	for (i = 1; i <= Line; i++) //控制行数
	{
		//先打印空格
		for (j = 1; j <= (Line - i); j++) //正三角中需要打印空格的行数为正三角的行数-1(最后一行不用打空格)
		{
			printf(" ");
		}
		//然后打印*
		for (j = 1; j <= 2 * i - 1; j++)
		{
			printf("*");
		}
		printf("\n");
	}
	//倒三角
	for (i = 1; i < Line; i++) //控制行数
	{
		//先打印空格
		for (j = 1; j <= i; j++)
		{
			printf(" ");
		}
		for (j = 1; j <= 2 * (Line - i) - 1; j++)
			//然后打印*
		{
			printf("*");
		}
		printf("\n");
	}
}


void program_six() {
	int A, B, C, D, E, N,temp,temp2;//temp,temp2存储两个五位数
	printf("以下等式满足'ABCDE* N = EDCBA'\n");
	for (A = 1; A <= 9; A++) {
		for (B = 0; B <= 9; B++) {
			for (C = 0; C <= 9; C++) {
				for (D = 0; D <= 9; D++) {
					for (E = 0; E <= 9; E++) {
						temp = A * 10000 + B * 1000 + C * 100 + D * 10 + E;
						temp2 = E * 10000 + D * 1000 + C * 100 + B * 10 + A;
						for (N = 2; N <= 9; N++) {
							if (temp * N == temp2) {//等式判断是否成立，成立输出
								printf("%d%d%d%d%d*%d=%d%d%d%d%d\n", A, B, C, D, E, N, E, D, C, B, A);
							}
						}
					}
				}
			}
		}
	}
}

void Menu() {
	printf("**********************************************************************\n");
	printf("*                                                                    *\n");
	printf("*                    程序设计 实验一实现功能                         *\n");
	printf("*                                                                    *\n");
	printf("*         一、1 - 2 + 3 - 4 + 5 - 6….+99 - 100之和                  *\n");
	printf("*                                                                    *\n");
	printf("*         二、1到200之间能被3整除但不能被5整除的所有数之和           *\n");
	printf("*                                                                    *\n");
	printf("*         三、1!+2! +3! +4! +5!….+20!之和                           *\n");
	printf("*                                                                    *\n");
	printf("*         四、1 + 22 + 333 + 4444 + 55555+ …+NNN..N之和             *\n");
	printf("*                                                                    *\n");
	printf("*         五、实现显示任意大小的下列图型                             *\n");
	printf("*                                                                    *\n");
	printf("*         六、满足以下等式的所有可能的 5 位数与 N                    *\n");
	printf("*                                                                    *\n");
	printf("*         七、显示菜单                                               *\n");
	printf("*                                                                    *\n");
	printf("*         零、退出系统                                               *\n");
	printf("*                                                                    *\n");
	printf("*                                                                    *\n");
	printf("**********************************************************************\n");



}

int main() {
	Menu();
	while (true) {

		int n;
		printf("\n");
		printf("请输入数字（1-7）选择所需要的功能(0退出系统):");
		scanf("%d", &n);
		if (n == 0) {
			printf("感谢使用！");
			exit(0);
		}
		while (n != 1 && n != 2 && n != 3 && n != 4 && n != 5 && n != 6&&n!=7) {
			printf("请输入正确的数字（1-7）选择所需要的功能(0退出系统):\n");
			scanf("%d", &n);
			if (n == 0) {
				exit(0);
			}
		}




		switch (n) {
		case 1: 
				printf("\n");
				printf("实现功能%d:\n", n);
			    program_one(); 
				printf("\n");
				printf("功能实现完毕！退出程序！\n");
					break;
		case 2: 
				printf("\n");
				printf("实现功能%d:\n", n);
				program_two();
				printf("\n");
				printf("功能实现完毕！退出程序！\n");
					 break;
		case 3: 
				printf("\n");
				printf("实现功能%d:\n", n);
				program_three(); 
				printf("\n");
				printf("功能实现完毕！退出程序！\n");
					break;
		case 4:
				printf("\n");
				printf("实现功能%d:\n", n);
				program_four();
				printf("\n");
				printf("功能实现完毕！退出程序！\n");
					 break;
		case 5:
				printf("\n");
				printf("实现功能%d:\n", n);
				program_five(); 
				printf("\n");
				printf("功能实现完毕！退出程序！\n");
					break;
		case 6: 
				printf("\n");
				printf("实现功能%d:\n", n);
				program_six();
				printf("\n");
				printf("功能实现完毕！退出程序！\n");
					break;
		case 7: Menu(); break;
		default:printf("error\n"); break;
		}


	}


	return 0;

}









********
*          *
*          *
********
*          *
*          *
********


     *
   * *
 *  *
     *
     *
     *
     *
********






















